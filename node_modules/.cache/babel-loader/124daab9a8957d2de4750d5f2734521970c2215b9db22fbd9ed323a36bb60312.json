{"ast":null,"code":"var _jsxFileName = \"/Users/nigar/university-events/src/pages/EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport events from '../mockData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const selectedEvent = events.find(event => event.id === parseInt(id));\n  const [editMode, setEditMode] = useState(false);\n  const navigate = useNavigate(); // Use useNavigate instead of useHistory\n\n  const handleDelete = () => {\n    // Implement deletion logic\n    const updatedEvents = events.filter(event => event.id !== parseInt(id));\n    console.log('Deleted Event:', selectedEvent);\n    console.log('Updated Events:', updatedEvents);\n    navigate('/'); // Navigate back to the event list\n  };\n  const handleUpdate = () => {\n    // Implement update logic here based on your application's data structure\n    console.log('Updated Event:', selectedEvent); // Log the updated event\n\n    setEditMode(false); // Exit edit mode\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"eventFeatures_left\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Event Detail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), selectedEvent ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), \" \", selectedEvent.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), \" \", selectedEvent.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), \" \", selectedEvent.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), \" \", selectedEvent.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Organizer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), \" \", selectedEvent.organizer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdate,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditMode(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Event not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Back to Event List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(EventDetailPage, \"9BPNTJwEJh6dVkbOIsGJFqyqSjE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","useNavigate","events","jsxDEV","_jsxDEV","EventDetailPage","_s","id","selectedEvent","find","event","parseInt","editMode","setEditMode","navigate","handleDelete","updatedEvents","filter","console","log","handleUpdate","class","children","fileName","_jsxFileName","lineNumber","columnNumber","name","date","location","description","organizer","onClick","to","_c","$RefreshReg$"],"sources":["/Users/nigar/university-events/src/pages/EventDetailPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport events from '../mockData';\n\nconst EventDetailPage = () => {\n  const { id } = useParams();\n  const selectedEvent = events.find((event) => event.id === parseInt(id));\n  const [editMode, setEditMode] = useState(false);\n  const navigate = useNavigate(); // Use useNavigate instead of useHistory\n\n  const handleDelete = () => {\n    // Implement deletion logic\n    const updatedEvents = events.filter((event) => event.id !== parseInt(id));\n    console.log('Deleted Event:', selectedEvent);\n    console.log('Updated Events:', updatedEvents);\n   \n    navigate('/'); // Navigate back to the event list\n  };\n\n  const handleUpdate = () => {\n    // Implement update logic here based on your application's data structure\n    console.log('Updated Event:', selectedEvent); // Log the updated event\n \n    setEditMode(false); // Exit edit mode\n  };\n\n  return (\n    <div  class= \"eventFeatures_left\">\n      <h2>Event Detail</h2>\n      {selectedEvent ? (\n        <div>\n          <p>\n            <strong>Name:</strong> {selectedEvent.name}\n          </p>\n          <p>\n            <strong>Date:</strong> {selectedEvent.date}\n          </p>\n          <p>\n            <strong>Location:</strong> {selectedEvent.location}\n          </p>\n          <p>\n            <strong>Description:</strong> {selectedEvent.description}\n          </p>\n          <p>\n            <strong>Organizer:</strong> {selectedEvent.organizer}\n          </p>\n          {editMode ? (\n            <div>\n              {/* Add form fields for editing */}\n              <button onClick={handleUpdate}>Update</button>\n            </div>\n          ) : (\n            <div>\n              <button onClick={handleDelete}>Delete</button>\n              <button onClick={() => setEditMode(true)}>Edit</button>\n            </div>\n          )}\n        </div>\n      ) : (\n        <p>Event not found</p>\n      )}\n      <Link to=\"/\">Back to Event List</Link>\n    </div>\n  );\n};\n\nexport default EventDetailPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}