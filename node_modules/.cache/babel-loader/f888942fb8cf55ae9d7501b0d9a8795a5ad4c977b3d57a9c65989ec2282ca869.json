{"ast":null,"code":"var _jsxFileName = \"/Users/nigar/university-events/src/pages/EventCreationPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventCreationPage = () => {\n  _s();\n  const initialValues = {\n    name: '',\n    date: '',\n    location: '',\n    description: '',\n    organizer: ''\n  };\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Event name is required'),\n    date: Yup.date().required('Event date is required'),\n    location: Yup.string().required('Event location is required'),\n    description: Yup.string().required('Event description is required'),\n    organizer: Yup.string().required('Event organizer is required')\n  });\n  const navigate = useNavigate();\n  const handleFormSubmit = async formData => {\n    try {\n      // Assuming your API endpoint is at http://localhost:3001/events\n      const response = await fetch('http://localhost:3001/events', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        // Event creation successful\n        console.log('Event created successfully!');\n        // Navigate back to the EventListingPage after successful creation\n        navigate('/');\n      } else {\n        // Handle error response\n        console.error('Error creating event:', response.statusText);\n        // You can display an error message to the user\n      }\n    } catch (error) {\n      console.error('An error occurred while creating the event:', error);\n      // Handle network errors or other exceptions\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: handleFormSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Event Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"name\",\n            component: \"div\",\n            className: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(EventCreationPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = EventCreationPage;\nexport default EventCreationPage;\nvar _c;\n$RefreshReg$(_c, \"EventCreationPage\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","useNavigate","jsxDEV","_jsxDEV","EventCreationPage","_s","initialValues","name","date","location","description","organizer","validationSchema","object","shape","string","required","navigate","handleFormSubmit","formData","response","fetch","method","headers","body","JSON","stringify","ok","console","log","error","statusText","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","component","className","_c","$RefreshReg$"],"sources":["/Users/nigar/university-events/src/pages/EventCreationPage.js"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\n\nconst EventCreationPage = () => {\n  const initialValues = {\n    name: '',\n    date: '',\n    location: '',\n    description: '',\n    organizer: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Event name is required'),\n    date: Yup.date().required('Event date is required'),\n    location: Yup.string().required('Event location is required'),\n    description: Yup.string().required('Event description is required'),\n    organizer: Yup.string().required('Event organizer is required'),\n  });\n\n  const navigate = useNavigate();\n\n  const handleFormSubmit = async (formData) => {\n    try {\n      // Assuming your API endpoint is at http://localhost:3001/events\n      const response = await fetch('http://localhost:3001/events', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (response.ok) {\n        // Event creation successful\n        console.log('Event created successfully!');\n        // Navigate back to the EventListingPage after successful creation\n        navigate('/');\n      } else {\n        // Handle error response\n        console.error('Error creating event:', response.statusText);\n        // You can display an error message to the user\n      }\n    } catch (error) {\n      console.error('An error occurred while creating the event:', error);\n      // Handle network errors or other exceptions\n    }\n  };\n\n  return (\n    <div>\n      <h1>Create Event</h1>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleFormSubmit}\n      >\n        <Form>\n          {/* Your form fields go here */}\n          <div>\n            <label htmlFor=\"name\">Event Name:</label>\n            <Field type=\"text\" id=\"name\" name=\"name\" />\n            <ErrorMessage name=\"name\" component=\"div\" className=\"error\" />\n          </div>\n\n          {/* ... (other form fields) */}\n\n          <button type=\"submit\">Create Event</button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default EventCreationPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,YAAY,QAAQ,QAAQ;AAC1D,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,aAAa,GAAG;IACpBC,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE,EAAE;IACfC,SAAS,EAAE;EACb,CAAC;EAED,MAAMC,gBAAgB,GAAGZ,GAAG,CAACa,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;IAC1CP,IAAI,EAAEP,GAAG,CAACe,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,wBAAwB,CAAC;IACrDR,IAAI,EAAER,GAAG,CAACQ,IAAI,CAAC,CAAC,CAACQ,QAAQ,CAAC,wBAAwB,CAAC;IACnDP,QAAQ,EAAET,GAAG,CAACe,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,4BAA4B,CAAC;IAC7DN,WAAW,EAAEV,GAAG,CAACe,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,+BAA+B,CAAC;IACnEL,SAAS,EAAEX,GAAG,CAACe,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,6BAA6B;EAChE,CAAC,CAAC;EAEF,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE9B,MAAMiB,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;IAC3C,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;MAC/B,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACO,EAAE,EAAE;QACf;QACAC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC1C;QACAZ,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,MAAM;QACL;QACAW,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEV,QAAQ,CAACW,UAAU,CAAC;QAC3D;MACF;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;MACnE;IACF;EACF,CAAC;EAED,oBACE3B,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAA6B,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBjC,OAAA,CAACP,MAAM;MACLU,aAAa,EAAEA,aAAc;MAC7BM,gBAAgB,EAAEA,gBAAiB;MACnCyB,QAAQ,EAAEnB,gBAAiB;MAAAc,QAAA,eAE3B7B,OAAA,CAACN,IAAI;QAAAmC,QAAA,gBAEH7B,OAAA;UAAA6B,QAAA,gBACE7B,OAAA;YAAOmC,OAAO,EAAC,MAAM;YAAAN,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACzCjC,OAAA,CAACL,KAAK;YAACyC,IAAI,EAAC,MAAM;YAACC,EAAE,EAAC,MAAM;YAACjC,IAAI,EAAC;UAAM;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC3CjC,OAAA,CAACJ,YAAY;YAACQ,IAAI,EAAC,MAAM;YAACkC,SAAS,EAAC,KAAK;YAACC,SAAS,EAAC;UAAO;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC,eAINjC,OAAA;UAAQoC,IAAI,EAAC,QAAQ;UAAAP,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC/B,EAAA,CArEID,iBAAiB;EAAA,QAiBJH,WAAW;AAAA;AAAA0C,EAAA,GAjBxBvC,iBAAiB;AAuEvB,eAAeA,iBAAiB;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}